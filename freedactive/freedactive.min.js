var Freedactive=function(){var o,c=["style","getMarkup","getStyle","getChildren"],t=function(e,t){var n=document.getElementById(e),i=l.parseUrl(),r=t[i]?t[i]():null;null===r&&(r=o()),"app-router-container"!==e||"App"!==t[i].name?(n.innerHTML=r.getMarkup(),r.getChildren().map(function(e){l.scriptAndStyle(n,l.getMethodsAndStyle(e(),c),e())}),l.scriptAndStyle(n,l.getMethodsAndStyle(r,c),r)):n.innerHTML=""},l={parseUrl:function(){var e=location.href;return e=e.slice(e.indexOf("/",8))},aton:function(l){return Object.keys(l).map(function(e){var t=l[e].toString(),n=(t=t.replace("=>","")).slice(0,t.indexOf("{")),i="function",r="async",o=(n=(n=n.replace("=>","")).slice(0,t.indexOf("("))).indexOf(i),c=n.indexOf(r);return t=-1<o?t.splice(o+i.length,0," "+e+" "):c<0?t.splice(0,0,"function "+e+" "):t.splice(c+r.length,0," function "+e+" ")}).join(" ")},scriptAndStyle:function(e,t,n){if(Object.keys(t).length){var i=l.aton(t),r=document.createElement("script");r.type="text/javascript",r.appendChild(document.createTextNode(i)),e.appendChild(r)}if(n.getStyle()){var o=document.createElement("link");o.type="text/css",o.rel="stylesheet",o.href=n.getStyle(),e.appendChild(o)}},getMethodsAndStyle:function(e,t){var n=Object.assign({},e);return Object.keys(n).map(function(e){t.includes(e)&&"style"!==e&&delete n[e],"function"!=typeof n[e]&&"style"!==e&&delete n[e]}),n}},n={},i=function(t){return Object.keys(t).map(function(e){return e.replace(/[A-Z]/g,function(e){return"-"+e.toLowerCase()})+":"+t[e]+";"}).join("")};return{init:function(e){t("app-container",{"/":o=e})},Router:{init:function(e){return n=e,'<div id="app-router-container" style="'+i({position:"relative",top:"0",left:"0",width:"100%",height:"100%"})+'"></div>'},routeto:function(e){history.pushState(null,null,location.origin+e),t("app-router-container",n)}},Style:{init:i}}}(),Router=function(e){return Freedactive.Router.init(e)},routeto=function(e){return Freedactive.Router.routeto(e)},Style=function(e){return Freedactive.Style.init(e)};String.prototype.splice=function(e,t,n){return this.slice(0,e)+n+this.slice(e+Math.abs(t))};